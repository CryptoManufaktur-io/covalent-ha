version: '3.9'

x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 20m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  ipfs-pinner:
    image: "us-docker.pkg.dev/covalent-project/network/ipfs-pinner:stable"
    volumes:
      - ipfs:/root/.ipfs/
    environment:
      - WEB3_JWT=MY_WEB3_API_KEY
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
      placement:
        constraints: ["node.role == worker"]

  evm-server:
    image: "us-docker.pkg.dev/covalent-project/network/evm-server:stable"
    container_name: evm-server
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
      placement:
        constraints: ["node.role == worker"]

  rudder:
    image: "us-docker.pkg.dev/covalent-project/network/rudder:stable"
    entrypoint: >
      /bin/bash -l -c "
        echo "moonbase-node:" $$NODE_ETHEREUM_MAINNET;
        echo "evm-server:" $$EVM_SERVER_URL;
        echo "ipfs-node:" $$IPFS_PINNER_URL;
        cd /app;
        MIX_ENV=dev mix release --overwrite;
        MIX_ENV=dev mix run --no-halt --eval 'Rudder.ProofChain.BlockSpecimenEventListener.start()';"
    environment:
      - NODE_ETHEREUM_MAINNET=https://moonbase-lb.example.com
      - BLOCK_RESULT_OPERATOR_PRIVATE_KEY=EOA-private-key-without-0x
      - EVM_SERVER_URL=http://evm-server:3002
      - IPFS_PINNER_URL=http://ipfs-pinner:3001
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
      placement:
        constraints: ["node.role == worker"]

  moonbase-haproxy:
    image: haproxy:latest
    user: root
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        apt-get update
        DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install --no-install-recommends -y curl jq bc ca-certificates
        exec haproxy -f /usr/local/etc/haproxy/haproxy.cfg
    networks:
      default:
        aliases:
          - moonbase-lb.example.com
    configs:
      - source: moonbase-haproxy.cfg
        target: /usr/local/etc/haproxy/haproxy.cfg
      - source: check-ecsync.sh
        target: /var/lib/haproxy/check-ecsync.sh
        mode: 0555
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: ["node.role == worker"]
    healthcheck:
      test: curl -sS http://localhost:8405/metrics || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    <<: *logging

configs:
  moonbase-haproxy.cfg:
    external: true
  check-ecsync.sh:
    external: true

volumes:
  ipfs:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=EFS-HOST.efs.REGION.amazonaws.com,nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport"
      device: "EFS-HOST.efs.REGION.amazonaws.com:/moonbase-ipfs"
